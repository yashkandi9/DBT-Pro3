name: insurance_project       # your dbt project name
version: '1.0.0'
config-version: 2

# Default target is set in dbt Cloud environment
profile: insurance_project

# Where your models live
model-paths: ["models"]
analysis-paths: ["analyses"]
test-paths: ["tests"]
seed-paths: ["seeds"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]
docs-paths: ["docs"]

flags:
  use_materialization_v2: true

# Auto-generate schema tests
require-dbt-version: ">=1.5.0"

# Materializations
models:
  insurance_project:  # match your project name
    # Bronze layer
    bronze:
      +schema: bronze
      +materialized: table
      +persist_docs:
          relation: true
          columns: true

    # Silver layer
    silver:
      +schema: silver
      +materialized: table
      +persist_docs:
          relation: true
          columns: true

    # Gold layer
    gold:
      +schema: gold
      +materialized: table
      +persist_docs:
          relation: true
          columns: true

    # Source folder (if you have sources.yml here)
    sources:
      +schema: raw

# # Name your project! Project names should contain only lowercase characters
# # and underscores. A good package name should reflect your organization's
# # name or the intended use of these models
# name: 'my_new_project'
# version: '1.0.0'
# config-version: 2

# # This setting configures which "profile" dbt uses for this project.
# profile: 'default'

# # These configurations specify where dbt should look for different types of files.
# # The `model-paths` config, for example, states that models in this project can be
# # found in the "models/" directory. You probably won't need to change these!
# model-paths: ["models"]
# analysis-paths: ["analyses"]
# test-paths: ["tests"]
# seed-paths: ["seeds"]
# macro-paths: ["macros"]
# snapshot-paths: ["snapshots"]

# target-path: "target"  # directory which will store compiled SQL files
# clean-targets:         # directories to be removed by `dbt clean`
#   - "target"
#   - "dbt_packages"


# # Configuring models
# # Full documentation: https://docs.getdbt.com/docs/configuring-models

# # In dbt, the default materialization for a model is a view. This means, when you run 
# # dbt run or dbt build, all of your models will be built as a view in your data platform. 
# # The configuration below will override this setting for models in the example folder to 
# # instead be materialized as tables. Any models you add to the root of the models folder will 
# # continue to be built as views. These settings can be overridden in the individual model files
# # using the `{{ config(...) }}` macro.

# models:
#   my_new_project:
#     # Applies to all files under models/example/
#     example:
#       +materialized: table
